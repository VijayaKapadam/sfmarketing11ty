---
layout: default
---

<div id="dataList" class="flex flex-wrap -mx-2">
  {%- set lazyImage =
  "data:image/svg+xml,%3Csvg%20xmlns%3D'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg'%20viewBox%3D'0%200%201%201'%20height%3D'500'%20width%3D'960'%20style%3D'background-color%3Argb(203%2C213%2C224)'%2F%3E"
  -%}

  
    
  
</div>
<!-- Include your JavaScript code -->
<script>
  // Attach the event listener to ensure JavaScript runs after page load
  document.addEventListener("DOMContentLoaded", async () => {
    try {
      const cachedData = localStorage.getItem("apiData"); // Try to get cached data
      const cacheExpiration = localStorage.getItem("cacheExpiration");

      if (cachedData && cacheExpiration && Date.now() < cacheExpiration) {
        // If cached data exists and cache is valid, use it
        populateData(JSON.parse(cachedData));
      } else {
        const response = await fetch("/api/fetchNotion"); // Make the fetch request
        const data = await response.json(); // Convert the response to JSON
        console.log("Fetched Data:", data); // Log the fetched data

        // Calculate cache expiration time (1 hour from now)
        const expiration = Date.now() + 3600000; // 1 hour in milliseconds

        // Save fetched data and cache expiration time
        localStorage.setItem("apiData", JSON.stringify(data.response.results));
        localStorage.setItem("cacheExpiration", expiration.toString());

        populateData(data.response.results);
      }
    } catch (error) {
      console.error("Error calling function:", error);
    }
  });

  // Function to populate data into the list
  function populateData(data) {
    const dataList = document.getElementById("dataList");
    dataList.innerHTML = data
      .map(
        (item) => `
        <div  class="w-full sm:w-1/2 md:w-1/3 self-stretch p-2 mb-2">
          <div  class="rounded shadow-md h-full">
        <a href="${item.properties.Img_URL.url}">
            <img class="w-full m-0 rounded-t lazy" src="${item.properties.Img_URL.url}" data-src="${item.properties.Img_URL.url}" width="960" height="500" alt="This post thumbnail">
        </a>
        <div class="px-6 py-5">
            <div class="font-semibold text-lg mb-2">
                <a class="text-slate-900 hover:text-slate-700" href="${item.properties.Img_URL.url}">${item.properties.Name.title[0].text.content}</a>
            </div>
            <p class="text-slate-700 mb-1" title="Published date"> ${item.properties["Published Date"].date.start} </p>
            <p class="text-slate-800">

                 ${item.properties["AI summary"].rich_text[0].text.content}

            </p>
        </div>
      </div>
    </div>
     `
      )
      .join("");
  }
</script>
